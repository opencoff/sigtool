// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: internal/pb/hdr.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Every encrypted file starts with a header describing the
// Block Size, Salt, Recipient keys etc. Header represents a
// decoded version of this information. It is encoded in
// protobuf format before writing to disk.
type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkSize     uint32                 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // encryption block size
	Salt          []byte                 `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`                             // master salt (nonces are derived from this)
	Pk            []byte                 `protobuf:"bytes,3,opt,name=pk,proto3" json:"pk,omitempty"`                                 // ephemeral curve PK
	Sender        []byte                 `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`                         // sender signed artifacts
	Keys          []*WrappedKey          `protobuf:"bytes,5,rep,name=keys,proto3" json:"keys,omitempty"`                             // list of wrapped receiver blocks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_internal_pb_hdr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_hdr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_internal_pb_hdr_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *Header) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *Header) GetPk() []byte {
	if x != nil {
		return x.Pk
	}
	return nil
}

func (x *Header) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Header) GetKeys() []*WrappedKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

// A file encryption key is wrapped by a recipient specific public
// key. WrappedKey describes such a wrapped key.
type WrappedKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DKey          []byte                 `protobuf:"bytes,1,opt,name=d_key,json=dKey,proto3" json:"d_key,omitempty"` // encrypted data key
	Salt          []byte                 `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`             // nonce used for encryption
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WrappedKey) Reset() {
	*x = WrappedKey{}
	mi := &file_internal_pb_hdr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WrappedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrappedKey) ProtoMessage() {}

func (x *WrappedKey) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_hdr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrappedKey.ProtoReflect.Descriptor instead.
func (*WrappedKey) Descriptor() ([]byte, []int) {
	return file_internal_pb_hdr_proto_rawDescGZIP(), []int{1}
}

func (x *WrappedKey) GetDKey() []byte {
	if x != nil {
		return x.DKey
	}
	return nil
}

func (x *WrappedKey) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

var File_internal_pb_hdr_proto protoreflect.FileDescriptor

const file_internal_pb_hdr_proto_rawDesc = "" +
	"\n" +
	"\x15internal/pb/hdr.proto\"\x85\x01\n" +
	"\x06header\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x01 \x01(\rR\tchunkSize\x12\x12\n" +
	"\x04salt\x18\x02 \x01(\fR\x04salt\x12\x0e\n" +
	"\x02pk\x18\x03 \x01(\fR\x02pk\x12\x16\n" +
	"\x06sender\x18\x04 \x01(\fR\x06sender\x12 \n" +
	"\x04keys\x18\x05 \x03(\v2\f.wrapped_keyR\x04keys\"6\n" +
	"\vwrapped_key\x12\x13\n" +
	"\x05d_key\x18\x01 \x01(\fR\x04dKey\x12\x12\n" +
	"\x04salt\x18\x02 \x01(\fR\x04saltB\rZ\vinternal/pbb\x06proto3"

var (
	file_internal_pb_hdr_proto_rawDescOnce sync.Once
	file_internal_pb_hdr_proto_rawDescData []byte
)

func file_internal_pb_hdr_proto_rawDescGZIP() []byte {
	file_internal_pb_hdr_proto_rawDescOnce.Do(func() {
		file_internal_pb_hdr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_pb_hdr_proto_rawDesc), len(file_internal_pb_hdr_proto_rawDesc)))
	})
	return file_internal_pb_hdr_proto_rawDescData
}

var file_internal_pb_hdr_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_pb_hdr_proto_goTypes = []any{
	(*Header)(nil),     // 0: header
	(*WrappedKey)(nil), // 1: wrapped_key
}
var file_internal_pb_hdr_proto_depIdxs = []int32{
	1, // 0: header.keys:type_name -> wrapped_key
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_pb_hdr_proto_init() }
func file_internal_pb_hdr_proto_init() {
	if File_internal_pb_hdr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_pb_hdr_proto_rawDesc), len(file_internal_pb_hdr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_pb_hdr_proto_goTypes,
		DependencyIndexes: file_internal_pb_hdr_proto_depIdxs,
		MessageInfos:      file_internal_pb_hdr_proto_msgTypes,
	}.Build()
	File_internal_pb_hdr_proto = out.File
	file_internal_pb_hdr_proto_goTypes = nil
	file_internal_pb_hdr_proto_depIdxs = nil
}
